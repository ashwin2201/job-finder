services:
  frontend:
    container_name: job-finder-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
      target: dev
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./frontend/.env.local
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    restart: always
    depends_on:
      - backend
  
  backend:
    container_name: job-finder-backend
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app
    environment:
      - PG_CONN=postgresql://user:password@db:5432/job_finder
    depends_on:
      db:
        condition: service_healthy    

  db:
    image: pgvector/pgvector:pg16
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: job_finder
    ports:
      - "5432:5432"
    volumes:
      - db_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 5s

volumes:
  db_volume:
